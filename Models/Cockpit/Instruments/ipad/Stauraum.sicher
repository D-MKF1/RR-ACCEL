# sort the last 10 speedtests
var vmaxOther = props.globals.getNode("/electrical-flight-events/vmax").getChildren("vmax");
var vmaxtrials = size(vmaxOther);
var speedtest_list = {};
for(var i=0; i < vmaxtrials; i+=1){
  speedtest_list[i] = {s: getprop("/electrical-flight-events/vmax/vmax["~i~"]")};
}
speedtest_list[10] = {s: vmaxact.getValue()};
var sortedspeedtest_list = sort(keys(speedtest_list), func (a,b) { speedtest_list[b].s - speedtest_list[a].s;});
var n = 0;
foreach(var u; sortedspeedtest_list){
  if(u < 10){
    setprop("/electrical-flight-events/vmax/vmax["~u~"]",speedtest_list[sortedspeedtest_list[u]].s);
  }
  me["test."~n].setText(sprintf("%.2f", speedtest_list[sortedspeedtest_list[u]].s));
  n = n+1;
}



#################
# foreach is not working ... always one wrong param in front
var n = -1;
foreach(var u; sortedspeedtest_list){
  me["test."~n].setText(sprintf("%.2f", speedtest_list[sortedspeedtest_list[u]].s));
  n = n+1;
}

## this is the right way
for(var n=0; n < sortnr; n+=1){
  debug.dump(speedtest_list[sortedspeedtest_list[n]]);
}


print("##########startTheShow###########");
debug.dump(speedtest_list);
debug.dump(sortedspeedtest_list);

var sortnr = size(sortedspeedtest_list);

print("-------");
print(sortnr);
print("-------");

for(var n=0; n < sortnr; n+=1){
  debug.dump(speedtest_list[sortedspeedtest_list[n]]);
}


print("#########");
debug.dump(sortedspeedtest_list[0]);




###############

var sortedspeedtest_list = sort(keys(speedtest_list), func (a,b) {

  if(speedtest_list[a].s < speedtest_list[b].s){
      return 1; # a should before b in the returned vector
  }elsif(speedtest_list[a].s == speedtest_list[b].s){
      return 0; # a is equivalent to b
  }else{
      return -1; # a should after b in the returned vector
  }
});
